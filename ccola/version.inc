macro(ccola_generate_version_header)
	set(${CCOLA_PROJECT_NAME}_VERSION_MAJOR 0)
	set(${CCOLA_PROJECT_NAME}_VERSION_MINOR 0)
	set(${CCOLA_PROJECT_NAME}_VERSION_PATCH 0)
	set(${CCOLA_PROJECT_NAME}_VERSION_STRING_FULL "")

	FIND_PACKAGE(Git)

	if (GIT_FOUND)
		execute_process(COMMAND ${GIT_EXECUTABLE} -C ${PROJECT_SOURCE_DIR} describe --abbrev=0 --tags
			OUTPUT_VARIABLE ${CMAKE_PROJECT_NAME}_VERSION_STRING
			OUTPUT_STRIP_TRAILING_WHITESPACE)

		execute_process(COMMAND ${GIT_EXECUTABLE} -C ${PROJECT_SOURCE_DIR} rev-list ${${PROJECT_NAME}_VERSION_STRING}^..HEAD --count
			OUTPUT_VARIABLE ${CMAKE_PROJECT_NAME}_VERSION_AHEAD
			OUTPUT_STRIP_TRAILING_WHITESPACE)

		execute_process(COMMAND ${GIT_EXECUTABLE} -C ${PROJECT_SOURCE_DIR} rev-parse --short HEAD
			OUTPUT_VARIABLE ${CMAKE_PROJECT_NAME}_VERSION_GIT_SHA
			OUTPUT_STRIP_TRAILING_WHITESPACE)

		string(REGEX MATCHALL "-.*$|[0-9]+" ${PROJECT_NAME}_PARTIAL_VERSION_LIST
			${${PROJECT_NAME}_VERSION_STRING})

		list(LENGTH ${PROJECT_NAME}_PARTIAL_VERSION_LIST
			${PROJECT_NAME}_PARTIAL_VERSION_LIST_LEN)

		if (${PROJECT_NAME}_PARTIAL_VERSION_LIST_LEN GREATER 2)
			# Set the basic semantic versioning numbers
			list(GET ${PROJECT_NAME}_PARTIAL_VERSION_LIST
				0 ${PROJECT_NAME}_VERSION_MAJOR)
			list(GET ${PROJECT_NAME}_PARTIAL_VERSION_LIST
				1 ${PROJECT_NAME}_VERSION_MINOR)
			list(GET ${PROJECT_NAME}_PARTIAL_VERSION_LIST
				2 ${PROJECT_NAME}_VERSION_PATCH)

			# The tweak part is optional, so check if the list contains it
			if (${PROJECT_NAME}_PARTIAL_VERSION_LIST_LEN GREATER 3)
				list(GET ${PROJECT_NAME}_PARTIAL_VERSION_LIST 3 ${PROJECT_NAME}_VERSION_TWEAK)
				string(SUBSTRING ${${PROJECT_NAME}_VERSION_TWEAK} 1 -1 ${PROJECT_NAME}_VERSION_TWEAK)
			endif()
		else()
			message(WARNING "${${PROJECT_NAME}_VERSION_STRING} is not a valid semantic version git tag. Please make sure your tags comply with vMAJOR.MINOR.PATCH-META")
		endif()

		# Unset the list
		unset(${PROJECT_NAME}_PARTIAL_VERSION_LIST)

		# Set full project version string
		set(${PROJECT_NAME}_VERSION_STRING_FULL
			${${PROJECT_NAME}_VERSION_STRING}+${${PROJECT_NAME}_VERSION_AHEAD}.${${PROJECT_NAME}_VERSION_GIT_SHA})
	endif()

	set(${PROJECT_NAME}_VERSION ${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_PATCH})
	if (${PROJECT_NAME}_VERSION_TWEAK)
		set(${PROJECT_NAME}_VERSION ${${PROJECT_NAME}_VERSION}-${${PROJECT_NAME}_VERSION_TWEAK})
	endif()

	string(TIMESTAMP GENERATOR_TIMESTAMP)
	configure_file("${CCOLA_DIR}/Version.h.in" "${PROJECT_SOURCE_DIR}/Version.h")
endmacro()
